@section Styles{
    <link href="~/matrica/assets/css/otptimer.css" rel="stylesheet" type="text/css" />
}

<div class="col-lg-4 mx-auto">
	<div class="card">
		<div class="card-body p-0 auth-header-box">
	<div class="text-center p-3">
		<a asp-area="" asp-controller="Login" asp-action="Login" class="logo logo-admin">
			<img src="~/matrica/assets/images/logo-sm.png" height="50" alt="logo" class="auth-logo">
		</a>
		<h4 class="mt-3 mb-1 fw-semibold text-white font-18">Let's Get Started Aviv</h4>
				<p class="text-secondary  mb-0">Verify OTP to continue to Aviv</p>
	</div>
</div>
<div class="card-header bg-white border-0 text-center">
	<h3 class="heading-h3 mb-0">Enter Verification Code</h3>
</div>
<div class="card-body pt-0">
	<form class="my-2 text-center" action="">
                <p class="text-muted  mb-0">Enter the verification code sent on your <span id="email"></span></p>
                <div class="otp-input mt-4">
					<input type="number" min="0" max="9" required>
					<input type="number" min="0" max="9" required>
					<input type="number" min="0" max="9" required>
					<input type="number" min="0" max="9" required>
					<input type="number" min="0" max="9" required>
					<input type="number" min="0" max="9" required>
				</div>
                <button class="btn btn-de-primary mt-2" onclick="return verifyOTP()" asp-controller="Email" asp-action="Verify"><i class="mdi mdi-check-all me-2"></i>Verify</button>
				<div class="resend-text">
					Didn't receive the code?
					<span class="resend-link" onclick="resendOTP()">Resend Code</span>
					<span id="timer"></span>
				</div>
	</form><!--end form-->
		</div>
		<div class="card-body bg-light-alt text-start text-secondary">
			&copy;<script>
					  document.write(new Date().getFullYear())
			</script>
			Urben Techies <span class="d-none d-sm-inline-block float-end"> Crafted with <i class="mdi mdi-heart text-danger"></i> by Aviv Solutions Inc </span>
		</div>
	</div>
</div>
@section Scripts{
	<script type="text/javascript">
        const inputs = document.querySelectorAll('.otp-input input');
        const timerDisplay = document.getElementById('timer');
        const resendLink = document.querySelector('.resend-link');
        const emailSpan = document.getElementById('email');
        let timeLeft = 120; // 2 minutes in seconds
        let timerId;
        let canResend = true;

        // Simulating an email for demonstration
        emailSpan.textContent = "user@example.com";

        function startTimer() {
            timerId = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(timerId);
                    timerDisplay.textContent = "Code expired";
                    timerDisplay.classList.add('expired');
                    inputs.forEach(input => input.disabled = true);
                    canResend = false;
                } else {
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    timerDisplay.textContent = `(${minutes}:${seconds.toString().padStart(2, '0')})`;
                    timeLeft--;
                }
            }, 1000);
        }

        function resendOTP() {
            if (canResend) {
                alertMessage('New OTP','New OTP sent!','success');
                timeLeft = 120;
                inputs.forEach(input => {
                    input.value = '';
                    input.disabled = false;
                });
                inputs[0].focus();
                clearInterval(timerId);
                timerDisplay.classList.remove('expired');
                // startTimer();
            } else {
                // alert("Cannot resend code. Time has expired.");
                // startTimer();
            }
        }

        inputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length > 1) {
                    e.target.value = e.target.value.slice(0, 1);
                }
                if (e.target.value.length === 1) {
                    if (index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }
                }
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && !e.target.value) {
                    if (index > 0) {
                        inputs[index - 1].focus();
                    }
                }
                if (e.key === 'e') {
                    e.preventDefault();
                }
            });
        });

        function verifyOTP() {

           
            const otp = Array.from(inputs).map(input => input.value).join('');
            if (otp.length === 6) {
                if (timeLeft > 0) {
                    // alertMessage('OTP Verification','Verifying your OTP: ' + otp + '. Click OK to Continue','success');
                    return true;
                } else {
                    alertMessage('OTP Expired','OTP has expired. Please request a new one.','failure');
                    return false;
                }
            } else {
                alertMessage('OTP Required','Please enter a 6-digit OTP','failure');
                return false;
            }
        }

        // startTimer();


        function alertMessage(header, message, iconMessage){
            Swal.fire({
                              title: header.toString(),
                              text: message.toString(),
                              icon: iconMessage.toString(),
                            });
        }
			</script>
		}